<idea-plugin>
    <id>io.protostuff.protostuff-jetbrains-plugin</id>
    <name>Protobuf Support</name>
    <version>0.8.0</version>
    <vendor email="jetbrains-plugin@protostuff.io">Kostiantyn Shchepanovskyi</vendor>

    <description><![CDATA[
        <a href="https://developers.google.com/protocol-buffers/">Google Protobuf</a> support for JetBrains products.
        <br>
        <br>
        Features:
        <ul>
            <li>Full Proto3 support.</li>
            <li>Custom include path for proto files.</li>
            <li>Reference support.</li>
            <li>Usage search for messages/enums.</li>
            <li>Syntax highlighting.</li>
            <li>Syntax validation for proto2/proto3.</li>
            <li>Error checks for reserved/duplicated field tags and names.</li>
            <li>Fonts & Colors configuration.</li>
            <li>Structure View.</li>
            <li>Brace matching.</li>
            <li>Line and block commenting.</li>
            <li>Code formatting.</li>
            <li>Navigation to message, enum or service by name (Ctrl+N)</li>
            <li>Proto file rename refactoring (imports are update automatically).</li>
        </ul>
        <br>
        <a href="https://github.com/protostuff/protobuf-jetbrains-plugin/wiki/Roadmap">Roadmap</a> |
        <a href="https://github.com/protostuff/protobuf-jetbrains-plugin/issues">Issue tracker</a> |
        Donate (<a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5UPXLBR8UAHG6">PayPal</a>,
        <a href="https://ksprojects.org/protobuf-support-for-jetbrains-ide/btc/">BitCoin</a>)
        <br>
    ]]></description>

    <change-notes><![CDATA[

        <a href="https://github.com/protostuff/protobuf-jetbrains-plugin/releases/tag/v0.8.0">
            <b>v0.8.0</b>
        </a> (2017-04-14)
        <ul>
            <li>Support for proto file renames - import statements are automatically updated when
                imported file is renamed.</li>
            <li>Add proto2/proto3 syntax validation - check field labels (in proto2 labels are
                mandatory; in proto3 optional and required labels are forbidden), enum values
                (first value must be zero), check for elements removed in proto3 - extensions and groups.</li>
            <li>Resolve option references - navigate to message field which corresponds to an option key.</li>
            <li>Improved icon for proto files.</li>
            <li>Fix imports resolving in WebStorm 2017.1, when source directory is marked as "Resource Root".</li>
            <li>Fix error that is reported by IDE when proto files are importing each other in a loop (or when
                proto file imports itself).</li>
        </ul>

        <br>
        <a href="https://github.com/protostuff/protobuf-jetbrains-plugin/releases">
            <b>Full Changelog</b>
        </a>

        <br>
        <br>
        <i>Donations (<a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5UPXLBR8UAHG6">PayPal</a>,
        <a href="https://ksprojects.org/protobuf-support-for-jetbrains-ide/btc/">BitCoin</a>) are welcome.
        With your little help we can make this plugin better.</i>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html
         for description -->
    <idea-version since-build="171"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>

    <project-components>
        <component>
            <implementation-class>io.protostuff.jetbrains.plugin.ProtostuffPluginController</implementation-class>
        </component>
        <component>
            <implementation-class>io.protostuff.jetbrains.plugin.settings.ProtobufSettings</implementation-class>
        </component>
        <component>
            <interface-class>io.protostuff.jetbrains.plugin.resources.BundledFileProvider</interface-class>
            <implementation-class>io.protostuff.jetbrains.plugin.resources.BundledFileProviderImpl
            </implementation-class>
        </component>
        <component>
            <interface-class>io.protostuff.jetbrains.plugin.reference.FieldReferenceProvider</interface-class>
            <implementation-class>io.protostuff.jetbrains.plugin.reference.FieldReferenceProviderImpl
            </implementation-class>
        </component>
    </project-components>

    <extensions defaultExtensionNs="com.intellij">

        <fileTypeFactory
                implementation="io.protostuff.jetbrains.plugin.ProtoFileTypeFactory"/>

        <lang.parserDefinition
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoParserDefinition"/>

        <lang.syntaxHighlighterFactory
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoSyntaxHighlighterFactory"/>


        <colorSettingsPage
                implementation="io.protostuff.jetbrains.plugin.ProtoColorSettingsPage"/>

        <lang.commenter
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoCommenter"/>

        <lang.braceMatcher
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoBraceMatcher"/>

        <lang.psiStructureViewFactory
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.view.structure.ProtoStructureViewFactory"/>

        <lang.formatter
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.formatter.FormattingModelBuilder"/>

        <langCodeStyleSettingsProvider
                implementation="io.protostuff.jetbrains.plugin.formatter.ProtoLanguageCodeStyleSettingsProvider"/>

        <codeStyleSettingsProvider
                implementation="io.protostuff.jetbrains.plugin.formatter.ProtoCodeStyleSettingsProvider"/>

        <lang.findUsagesProvider
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoFindUsagesProvider"/>

        <projectConfigurable instance="io.protostuff.jetbrains.plugin.settings.ProtobufSettingsConfigurable"/>

        <annotator
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.ProtoSyntaxKeywordsAnnotator"/>
        <annotator
                language="PROTO"
                implementationClass="io.protostuff.jetbrains.plugin.annotator.ProtoErrorsAnnotator"/>

        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.MessageNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.MessagePresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.FieldNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.FieldPresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.OneofFieldNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.FieldPresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.MapNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.FieldPresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.EnumConstantNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.EnumValuePresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.EnumNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.EnumPresentationProvider"/>
        <itemPresentationProvider
                forClass="io.protostuff.jetbrains.plugin.psi.ServiceNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.presentation.ServicePresentationProvider"/>

        <gotoClassContributor
                implementation="io.protostuff.jetbrains.plugin.GoToClassContributor"/>

        <lang.elementManipulator
            forClass="io.protostuff.jetbrains.plugin.psi.FileReferenceNode"
            implementationClass="io.protostuff.jetbrains.plugin.psi.manipulator.FileReferenceNodeManipulator"/>
        <lang.elementManipulator
                forClass="io.protostuff.jetbrains.plugin.psi.TypeReferenceNode"
                implementationClass="io.protostuff.jetbrains.plugin.psi.manipulator.TypeReferenceNodeManipulator"/>

    </extensions>

    <actions>

        <!-- Add your actions here -->
    </actions>

</idea-plugin>
